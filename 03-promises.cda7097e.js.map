{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGb,MAAMQ,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAQC,SAASN,SAASC,cAAc,uBAAuBM,OAC/DC,EAAOF,SAASN,SAASC,cAAc,sBAAsBM,OAC7DE,EAASH,SAASN,SAASC,cAAc,wBAAwBM,OAEvE,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC1BrB,EAAcqB,EAAI,EAAGL,EAAQK,EAAIF,GAC9BG,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAGpEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOG,QAAQ,sBAAoBzB,QAAiBC,MAAU,IAIhEQ,EAAKiB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const delay = parseInt(document.querySelector(\"input[name='delay']\").value);\n  const step = parseInt(document.querySelector(\"input[name='step']\").value);\n  const amount = parseInt(document.querySelector(\"input[name='amount']\").value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        \n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    \n  }\n  form.reset();\n};\n\n// ==============================================\n\n\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити."],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$form","document","querySelector","addEventListener","evt","preventDefault","delay1","parseInt","value","step","amount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.cda7097e.js.map"}